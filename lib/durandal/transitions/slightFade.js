// Generated by CoffeeScript 1.6.3
define(function(require) {
  var clearCss, fadeIn, fadeOut, fadingCss, slightFade, system;
  system = require("durandal/system");
  fadingCss = function(duration) {
    return {
      "-webkit-transition": "opacity " + duration + "ms",
      "-moz-transition": "opacity " + duration + "ms",
      "-o-transition": "opacity " + duration + "ms",
      "transition": "opacity " + duration + "ms"
    };
  };
  clearCss = {
    "-webkit-transition": "",
    "-moz-transition": "",
    "-o-transition": "",
    "transition": "",
    "display": "",
    "opacity": ""
  };
  fadeOut = function($el, cb) {
    $el.css(fadingCss(100));
    $el.css("opacity", 0);
    setTimeout((function() {
      $el.hide();
      return cb();
    }), 100);
  };
  fadeIn = function($el, cb) {
    $el.css("opacity", 0);
    $el.css("display", "block");
    $el.show();
    $el.css(fadingCss(500));
    return setTimeout((function() {
      $el.css("opacity", 1);
      return setTimeout((function() {
        $el.css(clearCss);
        return cb();
      }), 500);
    }), 0);
  };
  slightFade = function(context) {
    return system.defer(function(dfd) {
      var endTransition, startTransition;
      endTransition = function() {
        return dfd.resolve();
      };
      if (!context.child) {
        return fadeOut($(context.activeView), endTransition);
      } else {
        startTransition = function() {
          if (!context.keepScrollPosition) {
            $(document).scrollTop(0);
          }
          context.triggerAttach();
          return fadeIn($(context.child), endTransition);
        };
        if (context.activeView) {
          return fadeOut($(context.activeView), startTransition);
        } else {
          return startTransition();
        }
      }
    }).promise();
  };
  return slightFade;
});
