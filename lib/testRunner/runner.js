// Generated by CoffeeScript 1.6.3
require(['lib/coffeescript'], function(CoffeeScript) {
  window.CoffeeScript = CoffeeScript;
});

define(function(require) {
  require(['lib/itchcork'], function() {
    define('jquery', function() {
      return $;
    });
    require(["lib/sinon", "lib/hammer", "lib/jquery.scrollTo", "lib/jquery.localScroll", "lib/customBindings", 'lib/testRunner/mochaRunner'], function(CoffeeScript) {
      var postCoverage, postResults;
      postResults = function(stats, callback) {
        $.post("/stats", {
          stats: JSON.stringify(stats)
        }, function() {
          if (callback) {
            callback();
          }
        });
      };
      postCoverage = function() {
        var coverage;
        if (window.__coverage__) {
          coverage = JSON.stringify(window.__coverage__.valueOf());
          $.post("/coverage", {
            coverage: coverage
          });
        }
      };
      require(["itchcork"], function(ItchCork) {
        var index, runItchCork, srcList;
        srcList = void 0;
        index = 0;
        runItchCork = function(specList) {
          ItchCork.suiteView.expectedSuiteCount = specList.length;
          ItchCork.suiteView.on("end", function() {
            var stats;
            stats = {
              tests: ItchCork.suiteView.stats.tests(),
              passes: ItchCork.suiteView.stats.passes(),
              failures: ItchCork.suiteView.stats.failures()
            };
            postCoverage();
            postResults(stats);
          });
          require(specList);
        };
        ItchCork.suiteView.currentView("UnitTests");
        $.get("/specs", function(options) {
          var mochaDone, mochaRunner;
          if (options.framework === "itchcork") {
            ItchCork.suiteView.unitTestFrameworkManager.set("itchcork");
            return runItchCork(options.specs);
          } else if (options.framework === "mocha") {
            ItchCork.suiteView.unitTestFrameworkManager.set("mocha");
            mochaRunner = require('lib/testRunner/mochaRunner');
            mochaDone = function(stats) {
              var i, moduleName, suite;
              postResults(stats);
              postCoverage();
              i = void 0;
              moduleName = "";
              suite = void 0;
              $.get("/sourceList", function(sourceList) {
                var processSrc;
                processSrc = function(moduleName, require) {
                  var ex;
                  try {
                    require([moduleName], function(module) {
                      if (module && !window.__coverage__) {
                        suite = new ItchCork.Suite(moduleName, module, "mocha");
                      } else {
                        ItchCork.suiteView.bindView();
                      }
                    });
                  } catch (_error) {
                    ex = _error;
                    console.log(ex);
                  }
                };
                i = 0;
                while (i < sourceList.length) {
                  processSrc(sourceList[i], require);
                  i++;
                }
              });
            };
            mochaRunner(options.specs, require, ItchCork, mochaDone);
          }
        });
      });
    });
  });
});
