/*!sinonChai*/
(function(e){"use strict";if(typeof require==="function"&&typeof exports==="object"&&typeof module==="object"){module.exports=e}else if(typeof define==="function"&&define.amd){define(function(){return e})}else{chai.use(e)}})(function(t,n){"use strict";function i(e){return typeof e==="function"&&typeof e.getCall==="function"&&typeof e.calledWithExactly==="function"}function s(e){return e&&i(e.proxy)}function o(e){if(!i(e._obj)&&!s(e._obj)){throw new TypeError(n.inspect(e._obj)+" is not a spy or a call to a spy!")}}function u(e,t,n,r,s){function u(t){return e.printf.apply(e,t)}var o=r?"always have ":"have ";n=n||"";if(i(e.proxy)){e=e.proxy}return{affirmative:u(["expected %n to "+o+t+n].concat(s)),negative:u(["expected %n to not "+o+t].concat(s))}}function a(e,r,i){n.addProperty(t.Assertion.prototype,e,function(){o(this);var t=u(this._obj,r,i,false);this.assert(this._obj[e],t.affirmative,t.negative)})}function f(e,t,i){return function(){o(this);var s="always"+e[0].toUpperCase()+e.substring(1);var a=n.flag(this,"always")&&typeof this._obj[s]==="function";var f=a?s:e;var l=u(this._obj,t,i,a,r.call(arguments));this.assert(this._obj[f].apply(this._obj,arguments),l.affirmative,l.negative)}}function l(e,r,i){var s=f(e,r,i);n.addProperty(t.Assertion.prototype,e,s)}function c(e,r,i,s){var o=f(r,i,s);n.addMethod(t.Assertion.prototype,e,o)}function h(e,t,n){c(e,e,t,n)}var r=Array.prototype.slice;n.addProperty(t.Assertion.prototype,"always",function(){n.flag(this,"always",true)});a("called","been called"," at least once, but it was never called");a("calledOnce","been called exactly once",", but it was called %c%C");a("calledTwice","been called exactly twice",", but it was called %c%C");a("calledThrice","been called exactly thrice",", but it was called %c%C");l("calledWithNew","been called with new");h("calledBefore","been called before %1");h("calledAfter","been called after %1");h("calledOn","been called with %1 as this",", but it was called with %t instead");h("calledWith","been called with arguments %*","%C");h("calledWithExactly","been called with exact arguments %*","%C");h("calledWithMatch","been called with arguments matching %*","%C");h("returned","returned %1");c("thrown","threw","thrown %1")});
