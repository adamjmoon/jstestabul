// Generated by CoffeeScript 1.6.3
define(function() {
  ko.bindingHandlers.localScroll = {
    init: function(element, valueAccessor) {
      var el, options;
      el = $(element);
      options = valueAccessor();
      el.localScroll({
        target: options.target,
        lazy: true,
        hash: false
      });
    }
  };
  ko.bindingHandlers.openMenu = {
    init: function(element) {
      var el;
      el = $(element);
      if (el.hammer == null) {
        return;
      }
      el.hammer().on("swiperight", function(event) {
        event.gesture.preventDefault();
        event.gesture.stopPropagation();
        event.gesture.stopDetect();
        document.location.hash = "#main-nav";
      });
    }
  };
  ko.bindingHandlers.closeMenu = {
    init: function(element) {
      var el;
      el = $(element);
      if (el.hammer == null) {
        return;
      }
      el.hammer().on("swipeleft dragleft", function(event) {
        event.gesture.preventDefault();
        event.gesture.stopPropagation();
        event.gesture.stopDetect();
        document.location.hash = "#";
      });
    }
  };
  ko.bindingHandlers.debugSwipe = {
    init: function(element) {
      var el, _ref;
      el = $(element);
      if (!((el.hammer != null) && ((_ref = ot.config) != null ? _ref.isDev : void 0))) {
        return;
      }
      el.hammer().on("hold swiperight", function(event) {
        alert(el.context.id + " swiped right ");
      });
      return el.hammer().on("swipeleft", function(event) {
        alert(el.id + " swiped left ");
      });
    }
  };
  ko.bindingHandlers.debugTap = {
    init: function(element) {
      var el, _ref;
      el = $(element);
      if (!((el.hammer != null) && ((_ref = ot.config) != null ? _ref.isDev : void 0))) {
        return;
      }
      el.hammer().on("tap", function(event) {
        alert(el.context.id + " tapped ");
      });
      return el.hammer().on("tap", function(event) {
        alert(el.context.id + " tapped ");
      });
    }
  };
  ko.bindingHandlers.sideMenuClose = {
    init: function(element, valueAccessor) {
      var el;
      el = $(element);
      if (el.hammer == null) {
        return;
      }
      el.hammer().on("swipeleft dragleft", function(event) {
        var options;
        event.gesture.preventDefault();
        event.gesture.stopPropagation();
        event.gesture.stopDetect();
        options = valueAccessor();
        $('a.open-close').click();
      });
    }
  };
  ko.bindingHandlers.tap = {
    init: function(element, valueAccessor) {
      var tapBinding, tapHelper;
      tapHelper = $("#tapHelper");
      if (!($("#tapHelper").length > 0)) {
        $("body").append("<div id='tapHelper' style='display: none; position: absolute; width: 3px; height: 3px; z-index: 5000;'></div>");
        tapHelper = $("#tapHelper");
        tapHelper.on("click", function(event) {
          event.preventDefault();
          tapHelper.hide();
        });
      }
      return tapBinding = new TapBinding(element, valueAccessor, tapHelper);
    }
  };
});
